/* #Day38 of My #100DaysOfCodingChallenge: Exploring Bitmanipulation!



Problem Solved : Prime Factors

Problem Link : https://www.geeksforgeeks.org/problems/prime-factors5052/1?utm_source=youtube&utm_medium=collab_striver_ytdescription&utm_campaign=Prime-Factors



Problem Solved : Odd or Even

Problem Link : https://www.geeksforgeeks.org/problems/odd-or-even3618/1

*/

//Prime factors
class Solution {

    public int[] AllPrimeFactors(int N) {
        List<Integer> ans = new ArrayList<>();

        for (int i = 2; i * i <= N; i++) {
            if (N % i == 0) {
                ans.add(i);
                while (N % i == 0) {
                    N = N / i;
                }
            }
        }

        if (N != 1) {
            ans.add(N);
        }

        // Convert List<Integer> to int[]
        int[] result = new int[ans.size()];
        for (int i = 0; i < ans.size(); i++) {
            result[i] = ans.get(i);
        }

        return result;
    }

}



//Odd even
class Solution {
    static String oddEven(int n) {
        // code here
        if((n & 1) == 1)
        {
        return "odd";
        }
        else
        {
         return "even";
        }
       
    }
}
