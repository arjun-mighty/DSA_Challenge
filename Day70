//A. Again Twenty Five!
https://codeforces.com/problemset/problem/630/A
import java.util.Scanner;

public class LastTwoDigitsOfFivePower {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        
        long n = scanner.nextLong();
        
        // Since n is guaranteed to be >= 2, we directly output "25"
        System.out.println("25");
        
        scanner.close();
    }
}

//A. Vasya the Hipster
//https://codeforces.com/problemset/problem/581/A
import java.util.Scanner;
 
public class VasyaTheHipster {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
       
        int a = scanner.nextInt();
        int b = scanner.nextInt();
        
        
        int diffSocksDays = a < b ? a : b;
        
       
        int remainingSocks = a > b ? a - b : b - a;
        
  
        int sameSocksDays = remainingSocks / 2;
        
       
        System.out.println(diffSocksDays + " " + sameSocksDays);
        
        scanner.close();
    }
}
//A. Sereja and Dima
//https://codeforces.com/problemset/problem/381/A
import java.util.Scanner;
 
public class SerejaAndDima {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = scanner.nextInt();
        }
        int s = 0, d = 0, i = 0, j = n - 1;
        boolean turn = true;
        while (i <= j) {
            if (a[i] > a[j]) {
                if (turn) s += a[i];
                else d += a[i];
                i++;
            } else {
                if (turn) s += a[j];
                else d += a[j];
                j--;
            }
            turn = !turn;
        }
        System.out.println(s + " " + d);
        scanner.close();
    }
}

//A. Restoring Three Numbers
//https://codeforces.com/problemset/problem/1154/A
import java.util.Scanner;
 
public class RestoringThreeNumbers {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        
        int x1 = scanner.nextInt();
        int x2 = scanner.nextInt();
        int x3 = scanner.nextInt();
        int x4 = scanner.nextInt();
        
      
        int total = Math.max(Math.max(x1, x2), Math.max(x3, x4));
        
       
        int a = total - x3; // since x3 is b+c
        int b = total - x2; // since x2 is a+c
        int c = total - x1; // since x1 is a+b
        
  
        System.out.println(a + " " + b + " " + c);
        
        scanner.close();
    }
}
//Problem 4 :852. Peak Index in a Mountain Array

Problem :https://leetcode.com/problems/peak-index-in-a-mountain-array/description/

class Solution {
    public int peakIndexInMountainArray(int[] arr) {
        int left = 0;
        int right = arr.length - 1;

        while (left < right) {
            int mid = left + (right - left) / 2;

            if (arr[mid] > arr[mid + 1]) {
                right = mid;
            } else {
                left = mid + 1;
            }
        }

        return left;
    }
}
//1608. Special Array With X Elements Greater Than or Equal X
https://leetcode.com/problems/special-array-with-x-elements-greater-than-or-equal-x/description/
class Solution {
    public int specialArray(int[] nums) {
          int n = nums.length;

        // Evaluate possible values for x
        for (int x = 0; x <= n; x++) {
            int count = 0;
            
            for (int i = 0; i < n; i++) {
                if (nums[i] >= x) {
                    count++;
                }
            }
            // Check if count equals x
            if (count == x) {
                return x;
            }
        }

        return -1; 
    }
    
}
