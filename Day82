//Day82
//A. Games
//https://codeforces.com/problemset/problem/268/A
import java.util.Scanner;
 
public class UniformCounter {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        
        int n = scanner.nextInt();
        int[][] uniforms = new int[n][2];
        
       
        for (int i = 0; i < n; i++) {
            uniforms[i][0] = scanner.nextInt(); // Home color
            uniforms[i][1] = scanner.nextInt(); // Guest color
        }
        
        int count = 0;
        
        // Count the number of times a host team wears its guest uniform
        for (int i = 0; i < n; i++) { // Host team
            for (int j = 0; j < n; j++) { // Guest team
                if (i != j) { // Ensure they are not the same team
                    if (uniforms[i][0] == uniforms[j][1]) { // Home color matches guest color
                        count++;
                    }
                }
            }
        }
        
   
        System.out.println(count);
        
        scanner.close();
    }
}
//77. Combinations
//public class Solution {
    public List<List<Integer>> combine(int n, int k) {
        List<List<Integer>> result = new ArrayList<>();
        backtrack(result, new ArrayList<>(), n, k, 1);
        return result;
    }

    private void backtrack(List<List<Integer>> result, List<Integer> tempList, int n, int k, int start) {
        // If the combination is complete
        if (tempList.size() == k) {
            result.add(new ArrayList<>(tempList));
            return;
        }

        // Explore further numbers
        for (int i = start; i <= n; i++) {
            tempList.add(i); // Add number to current combination
            backtrack(result, tempList, n, k, i + 1); // Move to the next number
            tempList.remove(tempList.size() - 1); // Backtrack and remove the last added number
        }
    }


}
//

