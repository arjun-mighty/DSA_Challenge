/*#Day50 of  100DaysOfCoding Challenge: 

ðŸš€ Solved 1 problem on Sliding window protocol in leetcode. ðŸš€



Problem solved : 1904. Fruit Into Baskets

Problem : https://leetcode.com/problems/fruit-into-baskets/description/

Github : https://lnkd.in/d3EqYr79
*/

class Solution {
    public int totalFruit(int[] fruits) {
        
         Map<Integer, Integer> basket = new HashMap<>();
    int left = 0;
    int right = 0;
    int maxFruits = 0;

    for (right = 0; right < fruits.length; right++) {
      // Add current to basket
      int currentCount = basket.getOrDefault(fruits[right], 0);
      basket.put(fruits[right], currentCount + 1);

      // If basket has more than 2 type of fruits,
      // start emptying the basket
      while (basket.size() > 2) {
        int fruitCount = basket.get(fruits[left]);
        if (fruitCount == 1)
          basket.remove(fruits[left]);
        else
          basket.put(fruits[left], fruitCount - 1);
        left++;
      }

      maxFruits = Math.max(maxFruits, right - left + 1);
    }
    return maxFruits;
  }

}
