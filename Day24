//Question solved --> 141. Linked List Cycle

//Approach - Hare tortoise algorithm,using 2 pointers.

//Problem Link : https://leetcode.com/problems/linked-list-cycle/description/


/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public boolean hasCycle(ListNode head) {
        //HashMap<Integer> Map = new HashMap <>();
        ListNode slow = head;
        ListNode fast = head;

        while (slow!= null && fast!=null && fast.next!=null)
        {
            slow = slow.next;
            fast = fast.next.next;

            if(slow == fast)
            {
                return true;
            }
        }
        return false;

    }
}
