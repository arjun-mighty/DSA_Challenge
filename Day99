//A. Rudolf and the Ticket
//https://codeforces.com/problemset/problem/1941/A
import java.util.Scanner;

public class RudolfTicket {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        int t = scanner.nextInt(); // number of test cases
        for (int i = 0; i < t; i++) {
            int n = scanner.nextInt(); // number of coins in left pocket
            int m = scanner.nextInt(); // number of coins in right pocket
            int k = scanner.nextInt(); // maximum sum allowed
            
            int[] b = new int[n]; // coins in left pocket
            int[] c = new int[m]; // coins in right pocket
            
            for (int j = 0; j < n; j++) {
                b[j] = scanner.nextInt();
            }
            
            for (int j = 0; j < m; j++) {
                c[j] = scanner.nextInt();
            }
            
            int count = 0;
            // Check all pairs of coins
            for (int bf : b) {
                for (int cs : c) {
                    if (bf + cs <= k) {
                        count++;
                    }
                }
            }
            
            System.out.println(count);
        }
        
        scanner.close();
    }
}

//670. Maximum Swap
//https://leetcode.com/problems/maximum-swap/description/?envType=daily-question&envId=2024-10-17
class Solution {
    public int maximumSwap(int num) {
        // Convert num to string
        char[] s = Integer.toString(num).toCharArray();
        
        for (int i = 0; i < s.length; i++) {
            int ind = i;
            
            // Find max possible number to swap with
            for (int j = s.length - 1; j > i; j--) {
                if (s[ind] < s[j]) {
                    ind = j;
                }
            }

            // If ind gets changed
            if (ind != i && s[i] < s[ind]) {
                // Swap and return the result
                char temp = s[i];
                s[i] = s[ind];
                s[ind] = temp;
                return Integer.parseInt(new String(s));
            }
        }

        return num;
    }
}

//A. Cards for Friends
//https://codeforces.com/problemset/problem/1472/A
import java.util.Scanner;
 
public class CardsForFriends {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        int t = scanner.nextInt(); // number of test cases
        for (int i = 0; i < t; i++) {
            int w = scanner.nextInt(); // width of the sheet
            int h = scanner.nextInt(); // height of the sheet
            int n = scanner.nextInt(); // number of friends
            
            long pieces = 1; // start with one piece
            
            // Count how many times we can cut w
            while (w % 2 == 0) {
                w /= 2;
                pieces *= 2; // each cut doubles the number of pieces
            }
            
            // Count how many times we can cut h
            while (h % 2 == 0) {
                h /= 2;
                pieces *= 2; // each cut doubles the number of pieces
            }
            
            // Check if we can meet or exceed n pieces
            if (pieces >= n) {
                System.out.println("YES");
            } else {
                System.out.println("NO");
            }
        }
        
        scanner.close();
    }
}
