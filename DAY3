//https://www.geeksforgeeks.org/problems/second-largest3735/0

//{ Driver Code Starts
// Initial Template for Java
import java.io.*;
import java.util.*;
import java.util.stream.Collectors;

public class Main {

    public static void main(String[] args) throws Exception {
        Scanner sc = new Scanner(System.in);
        int t = Integer.parseInt(sc.nextLine());
        while (t-- > 0) {
            List<Integer> arr = new ArrayList<>();
            String input = sc.nextLine();
            Scanner ss = new Scanner(input);
            while (ss.hasNextInt()) {
                arr.add(ss.nextInt());
            }
            Solution ob = new Solution();
            int ans = ob.print2largest(arr);
            System.out.println(ans);
        }
    }
}

// } Driver Code Ends


// User function Template for Java

class Solution {
    public int print2largest(List<Integer> arr) {
        int maxi = -1;
        int secondmaxi = -1;
        int element;
         
        for(int i = 0;i<arr.size();i++){
            element = arr.get(i);
            if (element > maxi){
                secondmaxi=maxi;
                maxi = element;
            }
            
      // return maxi;
        
            else if (element < maxi && element > secondmaxi)
            {
                
                secondmaxi = element;
            }
            
        }
        return secondmaxi;
    }
    
}

//https://www.geeksforgeeks.org/problems/largest-element-in-array4009/0
//{ Driver Code Starts
import java.io.*;
import java.util.*;

class IntArray {
    public static int[] input(BufferedReader br, int n) throws IOException {
        String[] s = br.readLine().trim().split(" ");
        int[] a = new int[n];
        for (int i = 0; i < n; i++) a[i] = Integer.parseInt(s[i]);

        return a;
    }

    public static void print(int[] a) {
        for (int e : a) System.out.print(e + " ");
        System.out.println();
    }

    public static void print(ArrayList<Integer> a) {
        for (int e : a) System.out.print(e + " ");
        System.out.println();
    }
}

class GFG {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int t;
        t = Integer.parseInt(br.readLine());
        while (t-- > 0) {

            int n;
            n = Integer.parseInt(br.readLine());

            int[] arr = IntArray.input(br, n);

            Solution obj = new Solution();
            int res = obj.largest(n, arr);

            System.out.println(res);
        }
    }
}

// } Driver Code Ends

class Solution {
    
    public static int largest(int n, int[] arr) {
        // code here
        int maxi = arr[0];
        for( int i=0;i<arr.length;i++){
            if (arr[i] > maxi)
                maxi = arr[i];
        
            
        }
        return maxi;
    }
}
